{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "Funder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "FundAmount",
          "type": "uint256"
        }
      ],
      "name": "Funded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "WithdrawAmount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawFund",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fundingAddress",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xacbc8eac97da45ed52b07d4f69778d636a90f0a1ad21c55a12a078ea9aa78758",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1352728",
    "logsBloom": "0x
    "blockHash": "0x5d433e0048dcb1ea859e1efa2e1ec483c9f6079259f3ca83b31469a1fc593867",
    "transactionHash": "0xacbc8eac97da45ed52b07d4f69778d636a90f0a1ad21c55a12a078ea9aa78758",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1352728",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "de1a6b21838ac98232a335ba38aa5ca2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"Funder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"FundAmount\",\"type\":\"uint256\"}],\"name\":\"Funded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"WithdrawAmount\",\"type\":\"uint256\"}],\"name\":\"WithdrawFund\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundingAddress\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Patrick Collins\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{\"getAddressToAmountFunded(address)\":{\"params\":{\"fundingAddress\":\"the address of the funder\"},\"returns\":{\"_0\":\"the amount funded\"}}},\"title\":\"A sample Funding Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getAddressToAmountFunded(address)\":{\"notice\":\"Gets the amount that an address has funded\"},\"transferOwnership(address)\":{\"notice\":\"Funds our contract based on the ETH/USD price\"}},\"notice\":\"This contract is for creating a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// 1. Pragma\\npragma solidity ^0.8.7;\\n// 2. Imports\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\n// 3. Interfaces, Libraries, Contracts\\nerror FundMe__NotOwner();\\n\\n/**@title A sample Funding Contract\\n * @author Patrick Collins\\n * @notice This contract is for creating a sample funding contract\\n * @dev This implements price feeds as our library\\n */\\ncontract FundMe {\\n    // Type Declarations\\n    using PriceConverter for uint256;\\n\\n    // State variables\\n    uint256 public constant MINIMUM_USD = 50 * 10**18;\\n    address payable private i_owner;\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    mapping(address => uint) private transfered;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    // Events (we have none!)\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n    event Funded(address indexed Funder, uint FundAmount);\\n    event WithdrawFund(uint WithdrawAmount);\\n\\n    // Modifiers\\n    modifier onlyOwner() {\\n        // require(msg.sender == i_owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    // Functions Order:\\n    //// constructor\\n    //// receive\\n    //// fallback\\n    //// external\\n    //// public\\n    //// internal\\n    //// private\\n    //// view / pure\\n\\n    constructor(address priceFeed) {\\n        s_priceFeed = AggregatorV3Interface(priceFeed);\\n        i_owner = payable (msg.sender);\\n    }\\n\\n    \\n    /// @notice Funds our contract based on the ETH/USD price\\n\\n    function transferOwnership(address payable newOwner) public onlyOwner {\\n        require(newOwner != address(0),\\\"Invalid Address\\\");\\n        emit  OwnershipTransferred(i_owner, newOwner);\\n        i_owner = newOwner;\\n       }\\n\\n\\n    function transfer(address payable _to, uint _amount) public onlyOwner {\\n        require(_amount <= address(this).balance, \\\"Can't send more than the owners owns, aborting.\\\");\\n        transfered[msg.sender] += _amount;\\n\\n        uint balanceBeforeWithdrawal = address(this).balance;\\n        payable(_to).transfer(_amount);\\n        emit WithdrawFund(balanceBeforeWithdrawal);\\n\\n\\n       //(bool success,) = _to.call{value: _amount}(\\\"\\\");\\n       // require(success, \\\"Transaction failed, aborting\\\");\\n    }\\n\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n        emit Funded(msg.sender, msg.value);\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        \\n        // Transfer vs call vs Send\\n        // payable(msg.sender).transfer(address(this).balance);\\n        //(bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        uint balanceBeforeWithdrawal = address(this).balance;\\n        payable(i_owner).transfer(address(this).balance);\\n        emit WithdrawFund(balanceBeforeWithdrawal);\\n    }\\n\\n    function cheaperWithdraw() public onlyOwner {\\n        address[] memory funders = s_funders;\\n        // mappings can't be in memory, sorry!\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        // payable(msg.sender).transfer(address(this).balance);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    /** @notice Gets the amount that an address has funded\\n     *  @param fundingAddress the address of the funder\\n     *  @return the amount funded\\n     */\\n    function getAddressToAmountFunded(address fundingAddress)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return s_addressToAmountFunded[fundingAddress];\\n    }\\n\\n    function getVersion() public view returns (uint256) {\\n        return s_priceFeed.version();\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\",\"keccak256\":\"0xce004c34de191dda4a1cb5bc0caaf8279968c8d404f0416bc89b0394c774a826\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n  function getPrice(AggregatorV3Interface priceFeed)\\n    internal\\n    view\\n    returns (uint256)\\n  {\\n    (, int256 answer, , , ) = priceFeed.latestRoundData();\\n    // ETH/USD rate in 18 digit\\n    return uint256(answer * 10000000000);\\n  }\\n\\n  // 1000000000\\n  // call it get fiatConversionRate, since it assumes something about decimals\\n  // It wouldn't work for every aggregator\\n  function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\n    internal\\n    view\\n    returns (uint256)\\n  {\\n    uint256 ethPrice = getPrice(priceFeed);\\n    uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n    // the actual ETH/USD conversation rate, after adjusting the extra 0s.\\n    return ethAmountInUsd;\\n  }\\n}\",\"keccak256\":\"0x0ef9b5199cc0e9d5fca1aff75ca10a52033d784f24b3a6f6ab9e916b71d920b4\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200181c3803806200181c833981810160405281019062000037919062000129565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015b565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000f182620000c4565b9050919050565b6200010381620000e4565b81146200010f57600080fd5b50565b6000815190506200012381620000f8565b92915050565b600060208284031215620001425762000141620000bf565b5b6000620001528482850162000112565b91505092915050565b6116b1806200016b6000396000f3fe60806040526004361061009c5760003560e01c80639e87a5cd116100645780639e87a5cd14610176578063a9059cbb146101a1578063b60d4288146101ca578063be2693f0146101d4578063d7b4750c146101eb578063f2fde38b146102285761009c565b80630343fb25146100a15780630d8e6e2c146100de5780633ccfd60b146101095780636b69a59214610120578063893d20e81461014b575b600080fd5b3480156100ad57600080fd5b506100c860048036038101906100c39190610f59565b610251565b6040516100d59190610f9f565b60405180910390f35b3480156100ea57600080fd5b506100f361029a565b6040516101009190610f9f565b60405180910390f35b34801561011557600080fd5b5061011e610332565b005b34801561012c57600080fd5b5061013561056a565b6040516101429190610f9f565b60405180910390f35b34801561015757600080fd5b50610160610577565b60405161016d9190610fc9565b60405180910390f35b34801561018257600080fd5b5061018b6105a0565b6040516101989190611043565b60405180910390f35b3480156101ad57600080fd5b506101c860048036038101906101c391906110c8565b6105ca565b005b6101d2610770565b005b3480156101e057600080fd5b506101e96108f9565b005b3480156101f757600080fd5b50610212600480360381019061020d9190611108565b610b89565b60405161021f9190610fc9565b60405180910390f35b34801561023457600080fd5b5061024f600480360381019061024a9190611135565b610bd1565b005b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa158015610309573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032d9190611177565b905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b7576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610463576000600182815481106103dd576103dc6111a4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061045b90611202565b9150506103ba565b50600067ffffffffffffffff81111561047f5761047e61124a565b5b6040519080825280602002602001820160405280156104ad5781602001602082028036833780820191505090505b50600190805190602001906104c3929190610e4f565b50600047905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561052f573d6000803e3d6000fd5b507fd03e026b842138eab06c2418a5fc2eb6c68ba2c6a0d2768b0e4024d8d3196a898160405161055f9190610f9f565b60405180910390a150565b6802b5e3af16b188000081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461064f576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47811115610692576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610689906112fc565b60405180910390fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106e1919061131c565b9250508190555060004790508273ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610733573d6000803e3d6000fd5b507fd03e026b842138eab06c2418a5fc2eb6c68ba2c6a0d2768b0e4024d8d3196a89816040516107639190610f9f565b60405180910390a1505050565b6802b5e3af16b18800006107af600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1634610d8290919063ffffffff16565b10156107f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e79061139c565b60405180910390fd5b34600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461083f919061131c565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f5af8184bef8e4b45eb9f6ed7734d04da38ced226495548f46e0c8ff8d7d9a524346040516108ef9190610f9f565b60405180910390a2565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461097e576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006001805480602002602001604051908101604052809291908181526020018280548015610a0257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116109b8575b5050505050905060005b8151811015610a8d576000828281518110610a2a57610a296111a4565b5b602002602001015190506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080610a8590611202565b915050610a0c565b50600067ffffffffffffffff811115610aa957610aa861124a565b5b604051908082528060200260200182016040528015610ad75781602001602082028036833780820191505090505b5060019080519060200190610aed929190610e4f565b5060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1647604051610b35906113ed565b60006040518083038185875af1925050503d8060008114610b72576040519150601f19603f3d011682016040523d82523d6000602084013e610b77565b606091505b5050905080610b8557600080fd5b5050565b600060018281548110610b9f57610b9e6111a4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c56576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610cc5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbc9061144e565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080610d8e83610dbe565b90506000670de0b6b3a76400008583610da7919061146e565b610db191906114df565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610e0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e309190611588565b5050509150506402540be40081610e479190611603565b915050919050565b828054828255906000526020600020908101928215610ec8579160200282015b82811115610ec75782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610e6f565b5b509050610ed59190610ed9565b5090565b5b80821115610ef2576000816000905550600101610eda565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f2682610efb565b9050919050565b610f3681610f1b565b8114610f4157600080fd5b50565b600081359050610f5381610f2d565b92915050565b600060208284031215610f6f57610f6e610ef6565b5b6000610f7d84828501610f44565b91505092915050565b6000819050919050565b610f9981610f86565b82525050565b6000602082019050610fb46000830184610f90565b92915050565b610fc381610f1b565b82525050565b6000602082019050610fde6000830184610fba565b92915050565b6000819050919050565b6000611009611004610fff84610efb565b610fe4565b610efb565b9050919050565b600061101b82610fee565b9050919050565b600061102d82611010565b9050919050565b61103d81611022565b82525050565b60006020820190506110586000830184611034565b92915050565b600061106982610efb565b9050919050565b6110798161105e565b811461108457600080fd5b50565b60008135905061109681611070565b92915050565b6110a581610f86565b81146110b057600080fd5b50565b6000813590506110c28161109c565b92915050565b600080604083850312156110df576110de610ef6565b5b60006110ed85828601611087565b92505060206110fe858286016110b3565b9150509250929050565b60006020828403121561111e5761111d610ef6565b5b600061112c848285016110b3565b91505092915050565b60006020828403121561114b5761114a610ef6565b5b600061115984828501611087565b91505092915050565b6000815190506111718161109c565b92915050565b60006020828403121561118d5761118c610ef6565b5b600061119b84828501611162565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061120d82610f86565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361123f5761123e6111d3565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082825260208201905092915050565b7f43616e27742073656e64206d6f7265207468616e20746865206f776e6572732060008201527f6f776e732c2061626f7274696e672e0000000000000000000000000000000000602082015250565b60006112e6602f83611279565b91506112f18261128a565b604082019050919050565b60006020820190508181036000830152611315816112d9565b9050919050565b600061132782610f86565b915061133283610f86565b925082820190508082111561134a576113496111d3565b5b92915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000611386601b83611279565b915061139182611350565b602082019050919050565b600060208201905081810360008301526113b581611379565b9050919050565b600081905092915050565b50565b60006113d76000836113bc565b91506113e2826113c7565b600082019050919050565b60006113f8826113ca565b9150819050919050565b7f496e76616c696420416464726573730000000000000000000000000000000000600082015250565b6000611438600f83611279565b915061144382611402565b602082019050919050565b600060208201905081810360008301526114678161142b565b9050919050565b600061147982610f86565b915061148483610f86565b925082820261149281610f86565b915082820484148315176114a9576114a86111d3565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006114ea82610f86565b91506114f583610f86565b925082611505576115046114b0565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b61152f81611510565b811461153a57600080fd5b50565b60008151905061154c81611526565b92915050565b6000819050919050565b61156581611552565b811461157057600080fd5b50565b6000815190506115828161155c565b92915050565b600080600080600060a086880312156115a4576115a3610ef6565b5b60006115b28882890161153d565b95505060206115c388828901611573565b94505060406115d488828901611162565b93505060606115e588828901611162565b92505060806115f68882890161153d565b9150509295509295909350565b600061160e82611552565b915061161983611552565b925082820261162781611552565b91507f8000000000000000000000000000000000000000000000000000000000000000841460008412161561165f5761165e6111d3565b5b8282058414831517611674576116736111d3565b5b509291505056fea2646970667358221220ea89a29e0d7237fb9bee3cfd3bbf379e0c87c8403e8f6587b3f064dd0693468c64736f6c63430008130033",
  "deployedBytecode": "0x60806040526004361061009c5760003560e01c80639e87a5cd116100645780639e87a5cd14610176578063a9059cbb146101a1578063b60d4288146101ca578063be2693f0146101d4578063d7b4750c146101eb578063f2fde38b146102285761009c565b80630343fb25146100a15780630d8e6e2c146100de5780633ccfd60b146101095780636b69a59214610120578063893d20e81461014b575b600080fd5b3480156100ad57600080fd5b506100c860048036038101906100c39190610f59565b610251565b6040516100d59190610f9f565b60405180910390f35b3480156100ea57600080fd5b506100f361029a565b6040516101009190610f9f565b60405180910390f35b34801561011557600080fd5b5061011e610332565b005b34801561012c57600080fd5b5061013561056a565b6040516101429190610f9f565b60405180910390f35b34801561015757600080fd5b50610160610577565b60405161016d9190610fc9565b60405180910390f35b34801561018257600080fd5b5061018b6105a0565b6040516101989190611043565b60405180910390f35b3480156101ad57600080fd5b506101c860048036038101906101c391906110c8565b6105ca565b005b6101d2610770565b005b3480156101e057600080fd5b506101e96108f9565b005b3480156101f757600080fd5b50610212600480360381019061020d9190611108565b610b89565b60405161021f9190610fc9565b60405180910390f35b34801561023457600080fd5b5061024f600480360381019061024a9190611135565b610bd1565b005b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b8152600401602060405180830381865afa158015610309573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032d9190611177565b905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b7576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610463576000600182815481106103dd576103dc6111a4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061045b90611202565b9150506103ba565b50600067ffffffffffffffff81111561047f5761047e61124a565b5b6040519080825280602002602001820160405280156104ad5781602001602082028036833780820191505090505b50600190805190602001906104c3929190610e4f565b50600047905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561052f573d6000803e3d6000fd5b507fd03e026b842138eab06c2418a5fc2eb6c68ba2c6a0d2768b0e4024d8d3196a898160405161055f9190610f9f565b60405180910390a150565b6802b5e3af16b188000081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461064f576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b47811115610692576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610689906112fc565b60405180910390fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106e1919061131c565b9250508190555060004790508273ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610733573d6000803e3d6000fd5b507fd03e026b842138eab06c2418a5fc2eb6c68ba2c6a0d2768b0e4024d8d3196a89816040516107639190610f9f565b60405180910390a1505050565b6802b5e3af16b18800006107af600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1634610d8290919063ffffffff16565b10156107f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e79061139c565b60405180910390fd5b34600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461083f919061131c565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f5af8184bef8e4b45eb9f6ed7734d04da38ced226495548f46e0c8ff8d7d9a524346040516108ef9190610f9f565b60405180910390a2565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461097e576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006001805480602002602001604051908101604052809291908181526020018280548015610a0257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116109b8575b5050505050905060005b8151811015610a8d576000828281518110610a2a57610a296111a4565b5b602002602001015190506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080610a8590611202565b915050610a0c565b50600067ffffffffffffffff811115610aa957610aa861124a565b5b604051908082528060200260200182016040528015610ad75781602001602082028036833780820191505090505b5060019080519060200190610aed929190610e4f565b5060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1647604051610b35906113ed565b60006040518083038185875af1925050503d8060008114610b72576040519150601f19603f3d011682016040523d82523d6000602084013e610b77565b606091505b5050905080610b8557600080fd5b5050565b600060018281548110610b9f57610b9e6111a4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c56576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610cc5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbc9061144e565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080610d8e83610dbe565b90506000670de0b6b3a76400008583610da7919061146e565b610db191906114df565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610e0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e309190611588565b5050509150506402540be40081610e479190611603565b915050919050565b828054828255906000526020600020908101928215610ec8579160200282015b82811115610ec75782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610e6f565b5b509050610ed59190610ed9565b5090565b5b80821115610ef2576000816000905550600101610eda565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f2682610efb565b9050919050565b610f3681610f1b565b8114610f4157600080fd5b50565b600081359050610f5381610f2d565b92915050565b600060208284031215610f6f57610f6e610ef6565b5b6000610f7d84828501610f44565b91505092915050565b6000819050919050565b610f9981610f86565b82525050565b6000602082019050610fb46000830184610f90565b92915050565b610fc381610f1b565b82525050565b6000602082019050610fde6000830184610fba565b92915050565b6000819050919050565b6000611009611004610fff84610efb565b610fe4565b610efb565b9050919050565b600061101b82610fee565b9050919050565b600061102d82611010565b9050919050565b61103d81611022565b82525050565b60006020820190506110586000830184611034565b92915050565b600061106982610efb565b9050919050565b6110798161105e565b811461108457600080fd5b50565b60008135905061109681611070565b92915050565b6110a581610f86565b81146110b057600080fd5b50565b6000813590506110c28161109c565b92915050565b600080604083850312156110df576110de610ef6565b5b60006110ed85828601611087565b92505060206110fe858286016110b3565b9150509250929050565b60006020828403121561111e5761111d610ef6565b5b600061112c848285016110b3565b91505092915050565b60006020828403121561114b5761114a610ef6565b5b600061115984828501611087565b91505092915050565b6000815190506111718161109c565b92915050565b60006020828403121561118d5761118c610ef6565b5b600061119b84828501611162565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061120d82610f86565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361123f5761123e6111d3565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082825260208201905092915050565b7f43616e27742073656e64206d6f7265207468616e20746865206f776e6572732060008201527f6f776e732c2061626f7274696e672e0000000000000000000000000000000000602082015250565b60006112e6602f83611279565b91506112f18261128a565b604082019050919050565b60006020820190508181036000830152611315816112d9565b9050919050565b600061132782610f86565b915061133283610f86565b925082820190508082111561134a576113496111d3565b5b92915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000611386601b83611279565b915061139182611350565b602082019050919050565b600060208201905081810360008301526113b581611379565b9050919050565b600081905092915050565b50565b60006113d76000836113bc565b91506113e2826113c7565b600082019050919050565b60006113f8826113ca565b9150819050919050565b7f496e76616c696420416464726573730000000000000000000000000000000000600082015250565b6000611438600f83611279565b915061144382611402565b602082019050919050565b600060208201905081810360008301526114678161142b565b9050919050565b600061147982610f86565b915061148483610f86565b925082820261149281610f86565b915082820484148315176114a9576114a86111d3565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006114ea82610f86565b91506114f583610f86565b925082611505576115046114b0565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b61152f81611510565b811461153a57600080fd5b50565b60008151905061154c81611526565b92915050565b6000819050919050565b61156581611552565b811461157057600080fd5b50565b6000815190506115828161155c565b92915050565b600080600080600060a086880312156115a4576115a3610ef6565b5b60006115b28882890161153d565b95505060206115c388828901611573565b94505060406115d488828901611162565b93505060606115e588828901611162565b92505060806115f68882890161153d565b9150509295509295909350565b600061160e82611552565b915061161983611552565b925082820261162781611552565b91507f8000000000000000000000000000000000000000000000000000000000000000841460008412161561165f5761165e6111d3565b5b8282058414831517611674576116736111d3565b5b509291505056fea2646970667358221220ea89a29e0d7237fb9bee3cfd3bbf379e0c87c8403e8f6587b3f064dd0693468c64736f6c63430008130033",
  "devdoc": {
    "author": "Patrick Collins",
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {
      "getAddressToAmountFunded(address)": {
        "params": {
          "fundingAddress": "the address of the funder"
        },
        "returns": {
          "_0": "the amount funded"
        }
      }
    },
    "title": "A sample Funding Contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getAddressToAmountFunded(address)": {
        "notice": "Gets the amount that an address has funded"
      },
      "transferOwnership(address)": {
        "notice": "Funds our contract based on the ETH/USD price"
      }
    },
    "notice": "This contract is for creating a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address_payable"
      },
      {
        "astId": 67,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 75,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "transfered",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 78,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}